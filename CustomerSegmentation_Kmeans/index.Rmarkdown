---
title: Personalize your customer Journey With RFM segmentation, Part II
layout: single-sidebar
date: '2022-04-21'
categories:
  - Machine Learning
  - Marketing
  - Business Analytics
tags:
  - R
  - Marketing
slug: managerial-segmentation
subtitle: Managerial Approach
summary: In this post we explore how to implement a RFM segmentation in R programming.
lastmod: 2021-03-31
featured: yes
draft: no
image:
  placement: 1
  caption: 
  focal_point: Center
  preview_only: no
output:
  blogdown::html_page:
    toc: yes
    number_sections: no
    toc_depth: 1
  
links:
  - icon: github
    icon_pack: fab
    name: post materials
    url: https://github.com/hhousni/rfm_analysis
---

```{css, echo = FALSE}
.remark-slide-content {
  font-size: 28px;
  padding: 20px 80px 20px 80px;
}
.remark-code, .remark-inline-code {
  background: #f0f0f0;
}
.remark-code {
  font-size: 24px;
}
.huge .remark-code { /*Change made here*/
  font-size: 200% !important;
}
.tiny .remark-code { /*Change made here*/
  font-size: 50% !important;
}
```


```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Introduction

This is the the Part II of series of posts named "Personalize your customer Journey With RFM segmentation". 

In the [Part I](https://www.housnihassani.com/blog/rfm-segmentation/), we have highlighted how by using RFM (Recency, Frequency, Monetary) segmentation, an eCommerce business can split its customers into sub groups of customers with similar purchases behavior.  in order to target them with the right messages and the right actions. To achieve it, we have used a statistical method (Hierarchical) based on the RFM indicators and split the customers into 9 segments. We have named and given few actions plan for each segment. At the end of the part I, we have highlighted the pros and cons of the statistical method.

In this Part II, we are going to show how to perform an RFM segmentation by using a managerial approach. This the best way to segment customer that required to be update more frequently.

## Definition and Business Objectives 

All definitions have been given in the part I. But we are going the highlighted some of them here. 

**Customer segmentation** is the process of dividing customers by specific elements sucha as demographics, behavior, geographic, Psychographic, etc.

**RFM**:

- R for Recency: When was the last time the customer - purchased something?
- F for Frequency: What is the number of total purchases made by the customer?
- M for Monetary: What is the average amount spent when purchasing something?


This type of analysis will answer many questions about the online retail business. Who are the customers that spend the most? Who are the most loyal ones? who are the customers about to churn ?etc.

Answering this questions will help digital markers to create targeted marketing campaign.

**About the data** 

To implement the RFM segmentation in R, we are going to use the online retail II dataset from the ucl repository available. [Here](https://archive.ics.uci.edu/ml/datasets/Online+Retail+II)

"This Online Retail II data set contains all the transactions occurring for a UK-based and registered, non-store online retail between 01/12/2009 and 09/12/2011.The company mainly sells unique all-occasion gift-ware. Many customers of the company are wholesalers."

All the data exploration was done in the In the [Part I](https://www.housnihassani.com/blog/rfm-segmentation/). Please refer to it, if needed 


In the managerial method for segmentation, we will first group customers by recency i.e When was the last time the customer purchased something ? We assume this is a quarterly analysis that taking place one day after the last purchasing date i.e 2011-12-10. We are considering that a customer is:

- **Active**, if his last purchase was in Q4 2011.
- **Warm**, if his last purchase was in Q3 2011.
- **Cold**, if his last purchase was in Q2 2011.
- **Inactive**, if his last purchase was before Q2 2011.

.tyny[
```{r, message=FALSE, warning=FALSE}
# Loading package
if(!require("pacman")) install.packages("pacman")
p_load(readxl,tidyverse,kableExtra)
```
]
**Data loading**

```{r, warning=FALSE,cache=TRUE, message=FALSE}
# Data loading 
o.data <- read.csv("https://raw.githubusercontent.com/hhousni/rfm_analysis/main/Online%20Retail.csv")
# Data prep
data <- o.data %>% 
  select(CustomerID, Quantity, UnitPrice, InvoiceDate) %>%
  mutate(InvoiceDate=as.Date(InvoiceDate, "%d/%m/%Y")) %>%
  drop_na(CustomerID) %>% 
  filter(Quantity > 0, UnitPrice > 0 )

# creating RFM indicators 
customersQ42011 <- data%>% 
  mutate (purchase_amount = (Quantity * UnitPrice)) %>% 
  arrange(CustomerID) %>%
  group_by(CustomerID,InvoiceDate) %>%
  summarise(Sales = sum(purchase_amount)) %>%
  mutate(datediff =as.numeric(as.Date("2011-12-10") - InvoiceDate)) %>% 
  group_by(CustomerID) %>%
  summarise(monetary  = mean(Sales),
            recency   = min(datediff),
            frequency = n(),
            fisrt_purchase = max(datediff))
```

The code above have allowed to create a new database called customerQ42011 containing the RFM indicators. This is a necessary precondition before doing the segmentation.  


## Segmentation 


Lets split the customers by the recency according the following rules: 

- **Active** = Recency (days since last purchase) is equal or less than 70 days. 
- **Warm** = Recency (days since last purchase) is between 70 and 162 days
- **cold** = Recency (days since last purchase) is between 162 and 253 days
- **Inactive** = Recency (days since last purchase) is more than 253 days

```{r,fig.align="center",out.width="75%",cache=TRUE}
# split the customers by recency.
customersQ42011$segment <- "NA"
customersQ42011$segment[which(customersQ42011$recency <= 70)] = "Active"
customersQ42011$segment[which(customersQ42011$recency <= 162 & customersQ42011$recency > 70)] = "Warm"
customersQ42011$segment[which(customersQ42011$recency <= 253 & customersQ42011$recency > 162)] = "Cold"
customersQ42011$segment[which(customersQ42011$recency > 253)] = "Inactive"

# change segment to categorial variable 
customersQ42011$segment <- factor(customersQ42011$segment, levels=c("Active","Warm","Cold","Inactive"))

# visulize segments.
ggplot(customersQ42011, aes(segment)) +
  geom_bar(fill="blue4") +
  geom_text(aes(label = ..count..), stat = "count",vjust=-0.2) +
  labs(x="Segment",y="Nb Customers") +
  theme_minimal() +
  ggtitle("Number of customers in each segment")
```

As we can see the Active segment contains 2560 customers, the Warm segment contains 806, the Cold segment contains 483, and, the inactive segment contains 489 customers. The majority of the customers have made a purchase in the past 70 days.   

Now, we have identified all customers by segment, lets see their characteristics.

```{r}
# characteristics by segment
customersQ42011 %>%
  group_by(segment) %>%
  summarise("Monetary"=mean(monetary),
            "Recency"=mean(recency),
            "Frequency"=mean(frequency)) %>%
  kbl(caption = "Average profile by segment") %>%
  kable_styling()
```
The Active customers have spent in average £456, have an average recency of 26 days and an average frequency of 5 purchases. 
The Warm customers have spent in average £417, have an average recency of 105 days and an average frequency of 2 purchases. 
The Cold customers have spent in average £460, have an average recency of 205 days and an average frequency of 1 purchases.
The inactive customers have spent in average £483, have an average recency of 310 days and an average frequency of 1 purchases. 

We see that in average the inactive segment is the one which spend the most while Active segment is grouping the segment that buy the most. With this type of segmentation based on **how recently have customers purchased?**, the Online retail can now create actions plan to target their customers. 


We can now personalize more the customer segmentation, by using the Monetary  and first_purchase indicator into each segment.  


```{r,fig.align="center", cache=TRUE}

customersQ42011$segment <- "NA"
customersQ42011$segment[which(customersQ42011$recency <= 70)] = "active"
customersQ42011$segment[which(customersQ42011$recency <= 70 & customersQ42011$fisrt_purchase <=30)] = "new active"
customersQ42011$segment[which(customersQ42011$segment == "active" & customersQ42011$monetary >=458)] = "active high value"
customersQ42011$segment[which(customersQ42011$segment == "active" & customersQ42011$monetary < 458)] = "active low value"
customersQ42011$segment[which(customersQ42011$recency <= 162 & customersQ42011$recency > 70)] = "warm"
customersQ42011$segment[which(customersQ42011$segment == "warm" & customersQ42011$monetary > 458)] = "warm high value"
customersQ42011$segment[which(customersQ42011$segment == "warm" & customersQ42011$monetary < 458)] = "warm low value"
customersQ42011$segment[which(customersQ42011$recency <= 253 & customersQ42011$recency > 162)] = "cold"
customersQ42011$segment[which(customersQ42011$recency > 253)] = "inactive"


customersQ42011$segment = factor(customersQ42011$segment, levels = c("new active","active high value","active low value",
                                                                     "warm high value","warm low value","cold","inactive"))

ggplot(customersQ42011, aes(segment)) +
  geom_bar(fill="blue4") +
  geom_text(aes(label = ..count..), stat = "count",vjust=-0.2) +
  labs(x="Segment",y="Nb Customers") +
  theme_minimal() +
  ggtitle("Number of customers in each segment")
```

Lets take a look of the characteristics of each segment.


```{r}
# characteristics by segment
customersQ42011 %>%
  group_by(segment) %>%
  summarise("Monetary"=mean(monetary),
            "Recency"=mean(recency),
            "Frequency"=mean(frequency)) %>%
  kbl(caption = "Average profile by segment") %>%
  kable_styling()
```

The average profile by segment table show that the active high value customer have spent in average £1038 with a frequency of 7, their last purchase was in average 7 days ago. This profiles show that the new active customer spend in average 384 while the warm highly value, the cold and the inactive customer have spent in average £879, £460, £483 respectively.

Lets see How much has every cluster generated in Q42011. 

```{r}
revenueQ42011 <-  data %>%
  filter(InvoiceDate >= "2011-10-01") %>%
  group_by(CustomerID) %>%
  summarise(revQ42011=sum(Quantity*UnitPrice))


# Contribution of each segment in Q42011 revenue 

revenueQ42011 %>%
  right_join(customersQ42011, by="CustomerID") %>%
  group_by(segment) %>%
  summarise("revQ42011"=mean(revQ42011)) %>% replace(is.na(.), 0) %>%
  kbl(caption = "Generated amound by segment") %>%
  kable_styling()
```
The table above shows the amount generated by segment in the Q42011. 



For further analysis, we are interested to know among the active high value and active low value customer in Q42011 were inactive in Q32011. Knowing that can help us to understand how much revenu can we expected from innactive customer today going tomorrow. For that, we are going to perform a retropective analysis. 




## Retrospective analysis

In this part we will try to analyse what we can expect from customers according to his segment in the future. For that, we will need to see in the past how much this customer have generated. And Then, we can hope that they will generate the same in the future. 

From Here, we are going to the past on quarter before and pretending that Q42011 didn't happen and we are performing a customer segmentation on Q32011. 

```{r, cache=TRUE,message=FALSE, warning=FALSE}
# Split the data, keep only data before 2011-10-01
customersQ32011 <- data %>% 
  filter(InvoiceDate < "2011-10-01") %>%
  mutate (purchase_amount = (Quantity * UnitPrice)) %>% 
  arrange(CustomerID) %>%
  group_by(CustomerID,InvoiceDate) %>%
  summarise(Sales = sum(purchase_amount)) %>%
  mutate(datediff =as.numeric(as.Date("2011-10-02") - InvoiceDate)) %>% 
  group_by(CustomerID) %>%
  summarise(monetary  = mean(Sales),
            recency   = min(datediff),
            frequency = n(),
            fisrt_purchase = max(datediff))

# Perform segmentation in Q32011
customersQ32011$segment <- "NA"
customersQ32011$segment[which(customersQ32011$recency <= 70)] = "active"
customersQ32011$segment[which(customersQ32011$recency <= 70 & customersQ32011$fisrt_purchase <=30)] = "new active"
customersQ32011$segment[which(customersQ32011$segment == "active" & customersQ32011$monetary >=458)] = "active high value"
customersQ32011$segment[which(customersQ32011$segment == "active" & customersQ32011$monetary < 458)] = "active low value"
customersQ32011$segment[which(customersQ32011$recency <= 162 & customersQ32011$recency > 70)] = "warm"
customersQ32011$segment[which(customersQ32011$segment == "warm" & customersQ32011$monetary > 458)] = "warm high value"
customersQ32011$segment[which(customersQ32011$segment == "warm" & customersQ32011$monetary < 458)] = "warm low value"
customersQ32011$segment[which(customersQ32011$recency <= 253 & customersQ32011$recency > 162)] = "cold"
customersQ32011$segment[which(customersQ32011$recency > 251)] = "inactive"

customersQ32011$segment = factor(customersQ32011$segment, levels = c("new active","active high value","active low value","warm high value","warm low value","cold",
                                                                     "inactive"))
revenueQ42011 %>%
  right_join(customersQ32011, by="CustomerID") %>%
  group_by(segment) %>%
  summarise(rev=mean(revQ42011, na.rm = TRUE))%>%
  kbl(caption = "Generated amound by segment") %>%
  kable_styling()
```

The table 4 show the contribution of each Q32011 segment in the Q42011 revenue. We see that active high value customers have contributed the most. We see also that warm high value and warm low value customer have contributed at least about 2 times more than new customers. This results show that we can expect more revenu from warm customers than new customers. 


## Conclusion















